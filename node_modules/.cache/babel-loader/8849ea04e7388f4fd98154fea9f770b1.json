{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\execute-financial-main\\\\src\\\\components\\\\Faq.js\";\nimport React from \"react\";\nimport \"./Faq.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Faq = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Faq\",\n      id: \"faq\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"FAQs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"faq-accordian\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accordion\",\n                id: \"accordionExample\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"accordion-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"headingOne\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button\",\n                      type: \"button\",\n                      \"data-bs-toggle\": \"collapse\",\n                      \"data-bs-target\": \"#collapseOne\",\n                      \"aria-expanded\": \"true\",\n                      \"aria-controls\": \"collapseOne\",\n                      children: \"Accordion Item #1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 15,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 14,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"collapseOne\",\n                    className: \"accordion-collapse collapse show\",\n                    \"aria-labelledby\": \"headingOne\",\n                    \"data-bs-parent\": \"#accordionExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"This is the first item's accordion body.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 33,\n                        columnNumber: 25\n                      }, this), \" \", \"It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                        children: \".accordion-body\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 43,\n                        columnNumber: 25\n                      }, this), \", though the transition does limit overflow.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 32,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 13,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"accordion-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"headingTwo\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button collapsed\",\n                      type: \"button\",\n                      \"data-bs-toggle\": \"collapse\",\n                      \"data-bs-target\": \"#collapseTwo\",\n                      \"aria-expanded\": \"false\",\n                      \"aria-controls\": \"collapseTwo\",\n                      children: \"Accordion Item #2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"collapseTwo\",\n                    className: \"accordion-collapse collapse\",\n                    \"aria-labelledby\": \"headingTwo\",\n                    \"data-bs-parent\": \"#accordionExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"This is the second item's accordion body.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 68,\n                        columnNumber: 25\n                      }, this), \" \", \"It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                        children: \".accordion-body\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 25\n                      }, this), \", though the transition does limit overflow.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"accordion-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"accordion-header\",\n                    id: \"headingThree\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accordion-button collapsed\",\n                      type: \"button\",\n                      \"data-bs-toggle\": \"collapse\",\n                      \"data-bs-target\": \"#collapseThree\",\n                      \"aria-expanded\": \"false\",\n                      \"aria-controls\": \"collapseThree\",\n                      children: \"Accordion Item #3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"collapseThree\",\n                    className: \"accordion-collapse collapse\",\n                    \"aria-labelledby\": \"headingThree\",\n                    \"data-bs-parent\": \"#accordionExample\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"accordion-body\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"This is the third item's accordion body.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 25\n                      }, this), \" \", \"It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n                        children: \".accordion-body\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 25\n                      }, this), \", though the transition does limit overflow.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 12,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"faq-card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Faq;\nexport default Faq;\n\nvar _c;\n\n$RefreshReg$(_c, \"Faq\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/execute-financial-main/src/components/Faq.js"],"names":["React","Faq"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Faq.css\";\r\nconst Faq = () => {\r\n  return (\r\n    <>\r\n      <div className=\"Faq\" id=\"faq\">\r\n        <div className=\"container\">\r\n          <h1>FAQs</h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-12 mb-4\">\r\n              <div className=\"faq-accordian\">\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                  <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                      <button\r\n                        className=\"accordion-button\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#collapseOne\"\r\n                        aria-expanded=\"true\"\r\n                        aria-controls=\"collapseOne\"\r\n                      >\r\n                        Accordion Item #1\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"collapseOne\"\r\n                      className=\"accordion-collapse collapse show\"\r\n                      aria-labelledby=\"headingOne\"\r\n                      data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                      <div className=\"accordion-body\">\r\n                        <strong>\r\n                          This is the first item's accordion body.\r\n                        </strong>{\" \"}\r\n                        It is shown by default, until the collapse plugin adds\r\n                        the appropriate classNamees that we use to style each\r\n                        element. These classNamees control the overall\r\n                        appearance, as well as the showing and hiding via CSS\r\n                        transitions. You can modify any of this with custom CSS\r\n                        or overriding our default variables. It's also worth\r\n                        noting that just about any HTML can go within the{\" \"}\r\n                        <code>.accordion-body</code>, though the transition does\r\n                        limit overflow.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                      <button\r\n                        className=\"accordion-button collapsed\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#collapseTwo\"\r\n                        aria-expanded=\"false\"\r\n                        aria-controls=\"collapseTwo\"\r\n                      >\r\n                        Accordion Item #2\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"collapseTwo\"\r\n                      className=\"accordion-collapse collapse\"\r\n                      aria-labelledby=\"headingTwo\"\r\n                      data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                      <div className=\"accordion-body\">\r\n                        <strong>\r\n                          This is the second item's accordion body.\r\n                        </strong>{\" \"}\r\n                        It is hidden by default, until the collapse plugin adds\r\n                        the appropriate classNamees that we use to style each\r\n                        element. These classNamees control the overall\r\n                        appearance, as well as the showing and hiding via CSS\r\n                        transitions. You can modify any of this with custom CSS\r\n                        or overriding our default variables. It's also worth\r\n                        noting that just about any HTML can go within the{\" \"}\r\n                        <code>.accordion-body</code>, though the transition does\r\n                        limit overflow.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                      <button\r\n                        className=\"accordion-button collapsed\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#collapseThree\"\r\n                        aria-expanded=\"false\"\r\n                        aria-controls=\"collapseThree\"\r\n                      >\r\n                        Accordion Item #3\r\n                      </button>\r\n                    </h2>\r\n                    <div\r\n                      id=\"collapseThree\"\r\n                      className=\"accordion-collapse collapse\"\r\n                      aria-labelledby=\"headingThree\"\r\n                      data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                      <div className=\"accordion-body\">\r\n                        <strong>\r\n                          This is the third item's accordion body.\r\n                        </strong>{\" \"}\r\n                        It is hidden by default, until the collapse plugin adds\r\n                        the appropriate classNamees that we use to style each\r\n                        element. These classNamees control the overall\r\n                        appearance, as well as the showing and hiding via CSS\r\n                        transitions. You can modify any of this with custom CSS\r\n                        or overriding our default variables. It's also worth\r\n                        noting that just about any HTML can go within the{\" \"}\r\n                        <code>.accordion-body</code>, though the transition does\r\n                        limit overflow.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-12 mb-4\">\r\n              <div className=\"faq-card\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n"]},"metadata":{},"sourceType":"module"}