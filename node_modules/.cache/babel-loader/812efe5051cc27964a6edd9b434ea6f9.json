{"ast":null,"code":"import _slicedToArray from \"C:/Users/Admin/Desktop/backed-React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { useLayoutEffect } from 'react';\n/**\n * returns the merged type of a step or the default type.\n */\n\nvar useMergedType = function useMergedType(_ref) {\n  var defaultType = _ref.defaultType,\n      _ref$steps = _ref.steps,\n      steps = _ref$steps === void 0 ? [] : _ref$steps,\n      current = _ref.current,\n      defaultCurrent = _ref.defaultCurrent;\n\n  var _a;\n\n  var _useMergedState = useMergedState(defaultCurrent, {\n    value: current\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerCurrent = _useMergedState2[0],\n      updateInnerCurrent = _useMergedState2[1];\n\n  useLayoutEffect(function () {\n    if (current === undefined) return;\n    updateInnerCurrent(current);\n  }, [current]);\n  var innerType = typeof innerCurrent === 'number' ? (_a = steps[innerCurrent]) === null || _a === void 0 ? void 0 : _a.type : defaultType;\n  var currentMergedType = innerType !== null && innerType !== void 0 ? innerType : defaultType;\n  return {\n    currentMergedType: currentMergedType,\n    updateInnerCurrent: updateInnerCurrent\n  };\n};\n\nexport default useMergedType;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/backed-React/node_modules/antd/es/tour/useMergedType.js"],"names":["useMergedState","useLayoutEffect","useMergedType","_ref","defaultType","steps","current","defaultCurrent","_a","value","innerCurrent","updateInnerCurrent","undefined","innerType","type","currentMergedType"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA;AACA;AACA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;AAC5B,MACEC,WADF,GAKID,IALJ,CACEC,WADF;AAAA,mBAKID,IALJ,CAEEE,KAFF;AAAA,MAEEA,KAFF,2BAEU,EAFV;AAAA,MAGEC,OAHF,GAKIH,IALJ,CAGEG,OAHF;AAAA,MAIEC,cAJF,GAKIJ,IALJ,CAIEI,cAJF;;AAMA,MAAIC,EAAJ;;AACA,wBAA2CR,cAAc,CAACO,cAAD,EAAiB;AACxEE,IAAAA,KAAK,EAAEH;AADiE,GAAjB,CAAzD;AAAA;AAAA,MAAOI,YAAP;AAAA,MAAqBC,kBAArB;;AAGAV,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAIK,OAAO,KAAKM,SAAhB,EAA2B;AAC3BD,IAAAA,kBAAkB,CAACL,OAAD,CAAlB;AACD,GAHc,EAGZ,CAACA,OAAD,CAHY,CAAf;AAIA,MAAMO,SAAS,GAAG,OAAOH,YAAP,KAAwB,QAAxB,GAAmC,CAACF,EAAE,GAAGH,KAAK,CAACK,YAAD,CAAX,MAA+B,IAA/B,IAAuCF,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACM,IAAtG,GAA6GV,WAA/H;AACA,MAAMW,iBAAiB,GAAGF,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6CA,SAA7C,GAAyDT,WAAnF;AACA,SAAO;AACLW,IAAAA,iBAAiB,EAAjBA,iBADK;AAELJ,IAAAA,kBAAkB,EAAlBA;AAFK,GAAP;AAID,CArBD;;AAsBA,eAAeT,aAAf","sourcesContent":["import useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { useLayoutEffect } from 'react';\n/**\n * returns the merged type of a step or the default type.\n */\nconst useMergedType = _ref => {\n  let {\n    defaultType,\n    steps = [],\n    current,\n    defaultCurrent\n  } = _ref;\n  var _a;\n  const [innerCurrent, updateInnerCurrent] = useMergedState(defaultCurrent, {\n    value: current\n  });\n  useLayoutEffect(() => {\n    if (current === undefined) return;\n    updateInnerCurrent(current);\n  }, [current]);\n  const innerType = typeof innerCurrent === 'number' ? (_a = steps[innerCurrent]) === null || _a === void 0 ? void 0 : _a.type : defaultType;\n  const currentMergedType = innerType !== null && innerType !== void 0 ? innerType : defaultType;\n  return {\n    currentMergedType,\n    updateInnerCurrent\n  };\n};\nexport default useMergedType;"]},"metadata":{},"sourceType":"module"}