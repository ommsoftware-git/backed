{"ast":null,"code":"import useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport ConfigProvider, { ConfigContext } from '../config-provider';\n/* istanbul ignore next */\n\nexport default function genPurePanel(Component, defaultPrefixCls, getDropdownCls, postProps) {\n  return function PurePanel(props) {\n    const {\n      prefixCls: customizePrefixCls,\n      style\n    } = props;\n    const holderRef = React.useRef(null);\n    const [popupHeight, setPopupHeight] = React.useState(0);\n    const [popupWidth, setPopupWidth] = React.useState(0);\n    const [open, setOpen] = useMergedState(false, {\n      value: props.open\n    });\n    const {\n      getPrefixCls\n    } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls(defaultPrefixCls || 'select', customizePrefixCls);\n    React.useEffect(() => {\n      // We do not care about ssr\n      setOpen(true);\n\n      if (typeof ResizeObserver !== 'undefined') {\n        const resizeObserver = new ResizeObserver(entries => {\n          const element = entries[0].target;\n          setPopupHeight(element.offsetHeight + 8);\n          setPopupWidth(element.offsetWidth);\n        });\n        const interval = setInterval(() => {\n          var _a;\n\n          const dropdownCls = getDropdownCls ? `.${getDropdownCls(prefixCls)}` : `.${prefixCls}-dropdown`;\n          const popup = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(dropdownCls);\n\n          if (popup) {\n            clearInterval(interval);\n            resizeObserver.observe(popup);\n          }\n        }, 10);\n        return () => {\n          clearInterval(interval);\n          resizeObserver.disconnect();\n        };\n      }\n    }, []);\n    let mergedProps = Object.assign(Object.assign({}, props), {\n      style: Object.assign(Object.assign({}, style), {\n        margin: 0\n      }),\n      open,\n      visible: open,\n      getPopupContainer: () => holderRef.current\n    });\n\n    if (postProps) {\n      mergedProps = postProps(mergedProps);\n    }\n\n    return /*#__PURE__*/React.createElement(ConfigProvider, {\n      theme: {\n        token: {\n          motionDurationFast: '0.01s',\n          motionDurationMid: '0.01s',\n          motionDurationSlow: '0.01s'\n        }\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: holderRef,\n      style: {\n        paddingBottom: popupHeight,\n        position: 'relative',\n        width: 'fit-content',\n        minWidth: popupWidth\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, mergedProps))));\n  };\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/execute-financial-main/node_modules/antd/es/_util/PurePanel.js"],"names":["useMergedState","React","ConfigProvider","ConfigContext","genPurePanel","Component","defaultPrefixCls","getDropdownCls","postProps","PurePanel","props","prefixCls","customizePrefixCls","style","holderRef","useRef","popupHeight","setPopupHeight","useState","popupWidth","setPopupWidth","open","setOpen","value","getPrefixCls","useContext","useEffect","ResizeObserver","resizeObserver","entries","element","target","offsetHeight","offsetWidth","interval","setInterval","_a","dropdownCls","popup","current","querySelector","clearInterval","observe","disconnect","mergedProps","Object","assign","margin","visible","getPopupContainer","createElement","theme","token","motionDurationFast","motionDurationMid","motionDurationSlow","ref","paddingBottom","position","width","minWidth"],"mappings":"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","sourcesContent":["import useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport ConfigProvider, { ConfigContext } from '../config-provider';\n/* istanbul ignore next */\nexport default function genPurePanel(Component, defaultPrefixCls, getDropdownCls, postProps) {\n  return function PurePanel(props) {\n    const {\n      prefixCls: customizePrefixCls,\n      style\n    } = props;\n    const holderRef = React.useRef(null);\n    const [popupHeight, setPopupHeight] = React.useState(0);\n    const [popupWidth, setPopupWidth] = React.useState(0);\n    const [open, setOpen] = useMergedState(false, {\n      value: props.open\n    });\n    const {\n      getPrefixCls\n    } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls(defaultPrefixCls || 'select', customizePrefixCls);\n    React.useEffect(() => {\n      // We do not care about ssr\n      setOpen(true);\n      if (typeof ResizeObserver !== 'undefined') {\n        const resizeObserver = new ResizeObserver(entries => {\n          const element = entries[0].target;\n          setPopupHeight(element.offsetHeight + 8);\n          setPopupWidth(element.offsetWidth);\n        });\n        const interval = setInterval(() => {\n          var _a;\n          const dropdownCls = getDropdownCls ? `.${getDropdownCls(prefixCls)}` : `.${prefixCls}-dropdown`;\n          const popup = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(dropdownCls);\n          if (popup) {\n            clearInterval(interval);\n            resizeObserver.observe(popup);\n          }\n        }, 10);\n        return () => {\n          clearInterval(interval);\n          resizeObserver.disconnect();\n        };\n      }\n    }, []);\n    let mergedProps = Object.assign(Object.assign({}, props), {\n      style: Object.assign(Object.assign({}, style), {\n        margin: 0\n      }),\n      open,\n      visible: open,\n      getPopupContainer: () => holderRef.current\n    });\n    if (postProps) {\n      mergedProps = postProps(mergedProps);\n    }\n    return /*#__PURE__*/React.createElement(ConfigProvider, {\n      theme: {\n        token: {\n          motionDurationFast: '0.01s',\n          motionDurationMid: '0.01s',\n          motionDurationSlow: '0.01s'\n        }\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: holderRef,\n      style: {\n        paddingBottom: popupHeight,\n        position: 'relative',\n        width: 'fit-content',\n        minWidth: popupWidth\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, mergedProps))));\n  };\n}"]},"metadata":{},"sourceType":"module"}